function placeNewTilesInPreviewData(obj,~,~)
    % Place new tiles into the preview image 
    %
    %  function placeNewTilesInPreviewData(obj,~,~)
    %
    % Purpose
    % This callback places newly acquired tiles into the preview image of the 
    % BakingTray GUI. This method uses the property "previewTilePositions" to
    % determine where to place the tiles and locates at those positions in the
    % array which houses the preview section image data. This array can be 
    % found: acquisition_view.previewImageData array.
    % This callback is run when the tile position increments so that it only
    % runs once per X/Y position.

    if obj.verbose
        fprintf('In acquisition_view.placeNewTilesInPreviewData callback\n')
    end

    %TODO: temporarily do not build preview if ribbon-scanning
    if strcmp(obj.model.recipe.mosaic.scanmode,'ribbon')
        return
    end

    obj.updateStatusText
    if obj.model.processLastFrames==false
        return
    end

    %If the current tile position is 1 that means it was reset from its final value at the end of the last
    %section to 1 by BT.runTileScan. So that indicates the start of a section. If so, we wipe all the 
    %buffer data so we get a blank image
    if obj.model.currentTilePosition==1
        obj.initialisePreviewImageData;
    end

    % The first tile position in the grid is [0,0]. We enter the following if statment so long as the stages are not 
    % at this inital position.
    if obj.model.lastTilePos.X>0 && obj.model.lastTilePos.Y>0
        % Caution changing these lines: tiles may be rectangular
        % Tiles are placed based upon the array "previewTilePositions" which is generated by initialisePreviewImageData
        y = (1:size(obj.model.downSampledTileBuffer,1)) + obj.previewTilePositions(obj.model.lastTileIndex,2);
        x = (1:size(obj.model.downSampledTileBuffer,2)) + obj.previewTilePositions(obj.model.lastTileIndex,1);

        %Place the tiles into the full image grid so it can be plotted (there is a listener on this property to update the plot)
        obj.previewImageData(y,x,:,:) = obj.model.downSampledTileBuffer;

        %Only update the section image every so often to avoid slowing down the acquisition
        n=obj.model.currentTilePosition;
        if n==1 || mod(n,obj.updatePreviewEveryNTiles)==0 || n>=length(obj.model.positionArray)
            obj.updateSectionImage
        end

        obj.model.downSampledTileBuffer(:) = 0; %wipe the buffer 
        drawnow
    end % obj.model.lastTilePos.X>0 && obj.model.lastTilePos.Y>0

end %placeNewTilesInPreviewData